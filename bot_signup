const FB = require('./facebook');

function sign_obj() {
    this.senderId = null;
    this.qes_arr = [
        {
            qes: 'What is your First Name ?',
            ans: null
        }
        ,
        {
            qes: 'What is your Last Name ?',
            ans: null
        }
        ,
        {
            qes: 'What is your Email \n(example@example.com)?',
            ans: null
        }
        ,
        {
            qes: 'Confirm your Email ?',
            ans: null
        }
        ,
        {
            qes: 'What is your Phone Number \n{(xxx) xxx-xxxx or xxx-xxx-xxxx }?',
            ans: null
        }
        ,
        {
            qes: 'What is your Birth Date (MM/DD/YYYY) ?',
            ans: null
        }
        ,
        {
            qes: 'What is your Zip Code ?',
            ans: null
        }
        ,
        {
            qes: 'Are you covering the cost of the Lyfe-Up program? (Yes|No)',
            ans: null
        }
        ,
        {
            qes: 'What is your Gender (M|F)',
            ans: null
        }
        ,
        {
            qes: 'What is your Height in Feet and Inches (Ex : 5.3)',
            ans: null
        }
        ,
        {
            qes: 'What is your Weight in Pounds (Ex : 167)',
            ans: null
        }
        ,
        {
            qes: 'What is your Waist circumference in Cm (Ex : 22)',
            ans: null
        }
        ,
        {
            qes: 'What is your Hip circumference in Cm(Ex : 33)',
            ans: null
        }
        ,
        {
            qes: 'What is your RACE/ETHNICITY (Choose the Number of the Answer only)\n 1-White \n 2-Hispanic/Latino \n 3-Black/African-American \n 4-East Asian (e.g. Chinese , Japanese) \n 5-South Asian (e.g. Indian , Pakistani) \n 6-Middle Eastern \n 7-Native Hawaiian or other Pacific Islander \n 8-Aboriginal/American Indian/Alaska Native \n 9-Multi-Ethnic',
            ans: null
        }
        ,
        {
            qes: 'Does anyone in your family have type 2 diabetes? (Choose the Number of the Answer only)\n 1-Yes \n 2-No \n 3-I would rather not to say',
            ans: null
        }
        ,
        {
            qes: 'Which family members ? (Choose the Number of the Answer only) \n 1-Parent(s) \n 2-Sibling(s) \n 3-Both ',
            ans: 0
        }
        ,
        {
            qes: 'How much exercise do you usually get ? (Choose the Number of the Answer only) \n 1-Little or no exercise in a typical day(Pick this option if you do LESS than 20 minutes of\n' +
            'moderate activity per day , on average.) \n 2-Medium or high amount of exercise in a typical day(Pick this option if you do MORE than 20 minutes of\n' +
            'moderate activity per day , on average)',
            ans: null
        }
        ,
        {
            qes: 'Are you currently pregnant ? (Yes|No)',
            ans: null
        }
        ,
        {
            qes: 'Have you had a baby weighing more than 9 lbs at birth ? (Yes|No)',
            ans: null
        }
        ,
        {
            qes: 'Have you ever been tested for food allergies, (IgE immediate reaction), blood test or skin prick test? If YES, please pick the foods that you tested positive to ,or Choose No \n (Multi Choices , Just choose the Numbers of the Answers separated by `,`) \n (Ex : Fish,Milk) \n\n 1-Eggs\n\n 2-Fish \n\n 3-Peanuts\n\n 4-Wheat\n\n 5-Ginger\n\n 6-Milk\n\n 7-Strawberries',
            ans: null
        }
        ,
        {
            qes: 'Would you like the foods that you have listed above to be removed from your Wellness Plan ? (Yes|No)',
            ans: null
        }
        ,
        {
            qes: 'What is your Medical history ?\n(Multi Choices , Just choose the Numbers of the Answers separated by `,` if not Choose No) \n\n 1-Type I Diabetes\n\n 2-Type II Diabetes\n\n 3-Prediabetes\n(Blood test in the last year has shown you\'re at risk for diabetes)\n\n 4-Gestational Diabetes\n(Diagnosed during a previous pregnancy)\n\n 5-Metabolic Syndrome\n(Have been told by doctor that you have Metabolic Syndrome)\n\n 6-Low HDL\n(Your "Good Cholesterol" Is Too Low)\n\n 7-High LDL\n(Your "Bad Cholesterol" Is Too High)\n\n'
            + ' 8-High Triglycerides\n(Blood Test Has Shown High Triglycerides)\n\n 9-Hypertension\n(High Blood Pressure)\n\n 10-Hypotension\n(Low Blood Pressure)\n\n 11-Poly cystic ovary syndrome\n\n 12-Heart diseases\n\n 13-Dyslipidemia\n\n 14-Kidney failure\n\n 15-Liver dysfunction\n\n 16-Cancer\n\n 17-Anorexia\n\n 18-Hypo/hyper thyroids\n\n 19-Osteoporosis\n\n 20-Anemia\n\n 21-Thalassemia\n\n 22-Kidney stones',
            ans: null
        }
        ,
        {
            qes: 'What is your Surgical history ? \n(Multi Choices , Just choose the Numbers of the Answers separated by `,` if not Choose No) \n\n 1-Appendectomy\n\n 2-Cholecystectomy\n\n 3-CABG/PTCA\n\n 4-Gastrectomy\n\n 5-Thyroidectomy',
            ans: null
        }
        ,
        {
            qes: 'What are your Gastro-ontology problems ? \n(Multi Choices , Just choose the Numbers of the Answers separated by `,` if not Choose No) \n\n 1-Nausea/vomiting\n\n 2-Gastritis\n\n 3-Diarrhea\n\n 4-Constipation\n\n 5-Ulcer\n\n 6-Mouth/throat sores\n\n 7-Swallowing difficulties\n\n 8-Appetite problems\n\n 9-Gluten intolerance\n\n 10-Gluten intolerance',
            ans: null
        }
        ,
        {
            qes: 'Choose your Food preference \n(Multi Choices , Just choose the Numbers of the Answers separated by `,` if not Choose No) \n\n 1-Meat\n\n 2-Fish\n\n 3-Poultry\n\n 4-Turkey\n\n 5-Rice\n\n 6-Pasta\n\n 7-Eggs\n\n 8-Milk\n\n 9-Chocolate\n\n 10-Chips',
            ans: null
        }
        ,
        {
            qes: 'Choose your Fluid intake \n(Choose the Number of the Answer only) \n\n 1- 0.5L/day\n\n 2- 1L/day\n\n 3- 2L/day',
            ans: null
        }
        ,
        {
            qes: 'Do you Drink Alcohol ? \n(Choose the Number of the Answer only) \n\n 1-one cup per day\n\n 2-one cup per week\n\n 3-None',
            ans: null
        }
        ,
        {
            qes: 'Are you a Smoker ? (Yes|No)',
            ans: null
        }
        ,
        {
            qes: 'Do you follow any specific dietary practices ? \n(Multi Choices , Just choose the Numbers of the Answers separated by `,` if not Choose No) \n\n 1-Casein Free\n(avoids cow\'s milk, cheese and dairy products)\n\n 2-Gluten Free\n(avoids grains containing gluten)\n\n 3-Kosher\n(follows Jewish dietary guidelines)\n\n 4-No Red Meat\n(consumes poultry, fish and dairy products only)\n\n 5-Pescatarian\n(consumes fish, eggs and dairy products only (no meat, no poultry)) \n\n 6-Vegetarian\n(consumes dairy products and eggs only (no meat, no poultry, no fish))\n\n 7-Vegan\n(consumes plant foods only - no animal products at all)\n\n 8-Paleo diet\n(consumes meat, poultry, fish, nuts, fruits and vegetables only (no grains))',
            ans: null
        }
        ,
        {
            qes: 'Are you ready and able to Weigh yourself using your LyfeUp scale every day \n(Choose the Number of the Answer only) \n\n 1-Yes \n 2-No \n 3-Unsure',
            ans: null
        }
        ,
        {
            qes: 'Are you ready and able to Log in to the LyfeUp website or mobile app regularly \n(Choose the Number of the Answer only) \n\n 1-Yes \n 2-No \n 3-Unsure',
            ans: null
        }
        ,
        {
            qes: 'Are you ready and able to Track your food and physical activity regularly \n(Choose the Number of the Answer only) \n\n 1-Yes \n 2-No \n 3-Unsure',
            ans: null
        }
        ,
        {
            qes: 'Are you ready and able to Complete an interactive online lesson once per week \n(Choose the Number of the Answer only) \n\n 1-Yes \n 2-No \n 3-Unsure',
            ans: null
        }
        ,
        {
            qes: 'One more thing... How did you hear about us ? \n(Choose the Number of the Answer only) \n\n 1-Email\n\n 2-Event at Work\n(e.g. health fair, biometric screening, etc.)\n\n 3-Employee website\n\n 4-Platform\n(e.g. Jiff, Evive, Welltok)\n\n 5-Coworker referral\n\n 6-Doctor referral\n\n 7-Mailer\n\n 8-Text message\n\n 9-Family member referral\n\n 10-Handout at work',
            ans: null
        }
        ,

    ]
}

sign_obj.prototype.setSender = function (id) {
    this.senderId = id;
};
sign_obj.prototype.getIndx = function () {
    for (let i = 0; i < this.qes_arr.length; i++) {
        if (this.qes_arr[i].ans === null)
            return i;
    }
};
sign_obj.prototype.signProc = function (sender, msg) {
    let index = this.getIndx();
    if (msg === 'end000') {
        FB.fbMessage(sender, 'Your Signing-up Operation Has been Stopped , You can do that later at anytime you want ');
        return true;
    }
    switch (index) {
        case 0 : {
            this.qes_arr[index].ans = msg;
            FB.fbMessage(sender, this.qes_arr[index + 1].qes);
            break;
        }
        case 1 : {
            this.qes_arr[index].ans = msg;
            FB.fbMessage(sender, this.qes_arr[index + 1].qes);
            break;
        }
        case 2 : {
            let validMail = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            if (validMail.test(msg)) {
                this.qes_arr[index].ans = msg;
                FB.fbMessage(sender, this.qes_arr[index + 1].qes);
            }
            else
                FB.fbMessage(sender, 'Please Enter a Valid Email ' + this.qes_arr[index].qes);
            break;
        }
        case 3 : {
            if (msg === this.qes_arr[index - 1].ans) {
                this.qes_arr[index].ans = msg;
                FB.fbMessage(sender, this.qes_arr[index + 1].qes);
            }
            else {
                this.qes_arr[index - 1].ans = null;
                FB.fbMessage(sender, 'Email is not Match please try again !!!! \n' + this.qes_arr[index - 1].qes);
            }
            break;
        }
        case 4 : {
            let validPhone = /^[(]{0,1}[0-9]{3}[)]{0,1}[-\s\.]{0,1}[0-9]{3}[-\s\.]{0,1}[0-9]{4}$/;
            if (validPhone.test(msg)) {
                this.qes_arr[index].ans = msg;
                FB.fbMessage(sender, this.qes_arr[index + 1].qes);
            }
            else
                FB.fbMessage(sender, 'Please Enter a Valid Phone Number \n' + this.qes_arr[index].qes);
            break;
        }
        case 5 : {
            let validDate = /^(0[1-9]|1[012])[-/.](0[1-9]|[12][0-9]|3[01])[-/.](19|20)\d\d$/;
            if (validDate.test(msg)) {
                this.qes_arr[index].ans = msg;
                FB.fbMessage(sender, this.qes_arr[index + 1].qes);
            }
            else
                FB.fbMessage(sender, 'Please Enter a Valid BirthDate \n' + this.qes_arr[index].qes);
            break;

        }
        case 6 : {
            let validZip = /(^\d{5}$)|(^\d{5}-\d{4}$)/;
            if (validZip.test(msg)) {
                this.qes_arr[index].ans = msg;
                FB.fbMessage(sender, this.qes_arr[index + 1].qes);
            }
            else
                FB.fbMessage(sender, 'Please Enter a Valid Zip Code \n' + this.qes_arr[index].qes);
            break;
        }
        case 7 : {
            if (msg === 'yes' || msg === '1') {
                this.qes_arr[index].ans = 'Me';
                FB.fbMessage(sender, this.qes_arr[index + 1].qes);
            }
            else if (msg === 'no' || msg === '0')
                FB.fbMessage(sender, 'Your employer or health plan has provided you with a website link that ends in a special code. (Example: go.Lyfe-up.com/code or preventnow.com/code).\nPlease enter just the code.');
            else {
                this.qes_arr[index].ans = msg;
                FB.fbMessage(sender, this.qes_arr[index + 1].qes);
            }
            break;
        }
        case 8 : {
            if (msg === 'm' || msg === 'male')
                this.qes_arr[index].ans = 'male';

            else if (msg === 'f' || msg === 'female')
                this.qes_arr[index].ans = 'female';
            else {
                FB.fbMessage(sender, 'Please Enter a Valid Gender \n' + this.qes_arr[index].qes);
                break;
            }
            FB.fbMessage(sender, this.qes_arr[index + 1].qes);
            break;
        }
        case 9 : {
            one_choice(this.qes_arr, 3.0, 8.0);
            break;
        }
        case 10: {
            one_choice(this.qes_arr, 6.0, 440.0);
            break;
        }
        case 11: {
            one_choice(this.qes_arr, 10.0, 150.0);
            break;
        }
        case 12: {
            one_choice(this.qes_arr, 10.0, 150.0);
            break;
        }
        case 13: {
            one_choice(this.qes_arr, 0, 10);
            break;
        }
        case 14: {
            let num = parseFloat(msg);
            if (!isNaN(num) && num > 0 && num < 4) {
                this.qes_arr[index].ans = num;
                if (num === 1)
                    FB.fbMessage(sender, this.qes_arr[index + 1].qes);
                else
                    FB.fbMessage(sender, this.qes_arr[index + 2].qes);
                break;
            }
            else {
                FB.fbMessage(sender, 'Please Enter a Valid Choice \n' + this.qes_arr[index].qes);
                break;
            }
        }
        case 16: {
            one_choice(this.qes_arr, 0, 3);
            break;
        }
        case 17: {
            y_or_no(this.qes_arr);
            break;
        }
        case 18: {
            y_or_no(this.qes_arr);
            break;
        }
        case 19: {
            multi_choice(this.qes_arr, 0, 8);
            break;
        }
        case 20: {
            y_or_no(this.qes_arr);
            break;
        }
        case 21: {
            multi_choice(this.qes_arr, 0, 23);
            break;
        }
        case 22: {
            multi_choice(this.qes_arr, 0, 6);
            break;
        }
        case 23: {
            multi_choice(this.qes_arr, 0, 11);
            break;
        }
        case 24: {
            multi_choice(this.qes_arr, 0, 11);
            break;
        }
        case 25: {
            one_choice(this.qes_arr, 0, 4);
            break;
        }
        case 26: {
            one_choice(this.qes_arr, 0, 4);
            break;
        }
        case 27: {
            y_or_no(this.qes_arr);
            break;
        }
        case 28: {
            multi_choice(this.qes_arr, 0, 9);
            break;
        }
        case 29: {
            one_choice(this.qes_arr, 0, 4);
            break;
        }
        case 30: {
            one_choice(this.qes_arr, 0, 4);
            break;
        }
        case 31: {
            one_choice(this.qes_arr, 0, 4);
            break;
        }
        case 32: {
            one_choice(this.qes_arr, 0, 4);
            break;
        }
        case 33: {
            let num = parseFloat(msg);
            if (!isNaN(num) && num > 0 && num < 10) {
                this.qes_arr[index].ans = num;
                FB.fbMessage(sender, 'Your Registration has been completed Successfully , Please check your Email for the Verification code');
                FB.fbMessage(sender, this.qes_arr);
                return true;
            }
            else
                FB.fbMessage(sender, 'Please Enter a Valid Choice \n' + this.qes_arr[index].qes);
            break;
        }
    }
    return false;
};

function multi_choice(arr, min, max) {
    if (msg === 'no' || msg === '0')
        arr[index].ans = 0;
    else {
        let list = msg.split(/[ .:;?!~,`"&|()<>{}\[\]\r\n/\\]+/);
        for (let i = 0; i < list.length; i++) {
            let x = parseInt(list[i]);
            if (isNaN(x) || (!isNaN(x) && x > min && x < max)) {
                FB.fbMessage(sender, 'Please Enter Valid Choices Separated by `,` \n' + arr[index].qes);
                return false;
            }
        }
        arr[index].ans = list;
    }
    FB.fbMessage(sender, arr[index + 1].qes);
}

function one_choice(arr, min, max) {
    let num = parseFloat(msg);
    if (!isNaN(num) && num > min && num < max) {
        arr[index].ans = num;
        FB.fbMessage(sender, arr[index + 1].qes);
    }
    else
        FB.fbMessage(sender, 'Please Enter a Valid Choice \n' + arr[index].qes);
}

function y_or_no(arr) {
    if (msg === 'yes' || msg === '1')
        arr[index].ans = true;
    else if (msg === 'no' || msg === '0')
        arr[index].ans = false;
    else {
        FB.fbMessage(sender, 'Please Enter a Valid Value (Yes|No) \n' + arr[index].qes);
        return false;
    }
    FB.fbMessage(sender, arr[index + 1].qes);
}

var signQeue = [];

function qeueLook(sender) {
    for (let i = 0; i < signQeue.length; i++)
        if (signQeue[i].senderId === sender)
            return i;
}

function qeueAdd(sender) {
    let elem = new sign_obj();
    elem.setSender(sender);
    signQeue.push(elem);

}

function qeueDel(sender) {
    let elem = qeueLook(sender);
    if (elem > -1)
        signQeue.splice(elem, 1);
}

module.exports = {

    signQeue: signQeue,
    qeueLook: qeueLook,
    qeueAdd: qeueAdd,
    qeueDel: qeueDel,
    sign_obj: sign_obj

};