const FB = require('./facebook');

function sign_obj() {
    this.senderId = null;
    this.qes_arr = [
        {
            qes: 'What is your First Name ?',
            ans: null
        }
        ,
        {
            qes: 'What is your Last Name ?',
            ans: null
        }
        ,
        {
            qes: 'What is your Email \n(example@example.com)?',
            ans: null
        }
        ,
        {
            qes: 'Confirm your Email ?',
            ans: null
        }
        ,
        {
            qes: 'What is your Phone Number \n{(xxx) xxx-xxxx or xxx-xxx-xxxx }?',
            ans: null
        }
        ,
        {
            qes: 'What is your Birth Date (MM/DD/YYYY) ?',
            ans: null
        }
        ,
        {
            qes: 'What is your Zip Code ?',
            ans: null
        }
        ,
        {
            qes: 'Are you covering the cost of the Lyfe-Up program? (Yes|No)',
            ans: null
        }
        ,
        {
            qes: 'What is your Gender (M|F)',
            ans: null
        }
        ,
        {
            qes: 'What is your Height in Feet and Inches (Ex : 5.3)',
            ans: null
        }
        ,
        {
            qes: 'What is your Weight in Pounds (Ex : 167)',
            ans: null
        }
        ,
        {
            qes: 'What is your Waist circumference in Cm (Ex : 22)',
            ans: null
        }
        ,
        {
            qes: 'What is your Hip circumference in Cm(Ex : 33)',
            ans: null
        }
        ,
        {
            qes: 'What is your RACE/ETHNICITY (Choose the Number of the Answer only)\n 1-White \n 2-Hispanic/Latino \n 3-Black/African-American \n 4-East Asian (e.g. Chinese , Japanese) \n 5-South Asian (e.g. Indian , Pakistani) \n 6-Middle Eastern \n 7-Native Hawaiian or other Pacific Islander \n 8-Aboriginal/American Indian/Alaska Native \n 9-Multi-Ethnic',
            ans: null
        }
        ,
        {
            qes: 'Does anyone in your family have type 2 diabetes? (Choose the Number of the Answer only)\n 1-Yes \n 2-No \n 3-I would rather not to say',
            ans: null
        }
        ,
        {
            qes: 'Which family members ? (Choose the Number of the Answer only) \n 1-Parent(s) \n 2-Sibling(s) \n 3-Both ',
            ans: 0
        }
        ,
        {
            qes: 'How much exercise do you usually get ? (Choose the Number of the Answer only) \n 1-Little or no exercise in a typical day(Pick this option if you do LESS than 20 minutes of\n' +
            'moderate activity per day , on average.) \n 2-Medium or high amount of exercise in a typical day(Pick this option if you do MORE than 20 minutes of\n' +
            'moderate activity per day , on average)',
            ans: null
        }
        ,
        {
            qes: 'Are you currently pregnant ? (Yes|No)',
            ans: null
        }
        ,
        {
            qes: 'Have you had a baby weighing more than 9 lbs at birth ? (Yes|No)',
            ans: null
        }
    ]
}

sign_obj.prototype.setSender = function (id) {
    this.senderId = id;
};
sign_obj.prototype.getIndx = function () {
    for (let i = 0; i < this.qes_arr.length; i++) {
        if (this.qes_arr[i].ans === null)
            return i;
    }
};
sign_obj.prototype.signProc = function (sender, msg) {
    let index = this.getIndx();
    if (msg === 'end000') {
        FB.fbMessage(sender, 'Your Signing-up Operation Has been Stopped , You can do that later at anytime you want ');
        return true;
    }
    switch (index) {
        case 0 : {
            this.qes_arr[0].ans = msg;
            FB.fbMessage(sender, this.qes_arr[1].qes);
            break;
        }

        case 1 : {
            this.qes_arr[1].ans = msg;
            FB.fbMessage(sender, this.qes_arr[2].qes);
            break;
        }
        case 2 : {
            let validMail = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            if (validMail.test(msg)) {
                this.qes_arr[2].ans = msg;
                FB.fbMessage(sender, this.qes_arr[3].qes);
                break;
            }
            else {
                FB.fbMessage(sender, 'Please Enter a Valid Email ' + this.qes_arr[2].qes);
                break;
            }
        }
        case 3 : {
            if (msg === this.qes_arr[2].ans) {
                this.qes_arr[3].ans = msg;
                FB.fbMessage(sender, this.qes_arr[4].qes);
                break;
            }
            else {
                this.qes_arr[2].ans = null;
                FB.fbMessage(sender, 'Email is not Match please try again !!!! \n' + this.qes_arr[2].qes);
                break;
            }
        }
        case 4 : {
            let validPhone = /^[(]{0,1}[0-9]{3}[)]{0,1}[-\s\.]{0,1}[0-9]{3}[-\s\.]{0,1}[0-9]{4}$/;
            if (validPhone.test(msg)) {
                this.qes_arr[4].ans = msg;
                FB.fbMessage(sender, this.qes_arr[5].qes);
                break;
            }
            else {
                FB.fbMessage(sender, 'Please Enter a Valid Phone Number \n' + this.qes_arr[4].qes);
                break;
            }
        }
        case 5 : {
            let validDate = /^(0[1-9]|1[012])[-/.](0[1-9]|[12][0-9]|3[01])[-/.](19|20)\d\d$/;
            if (validDate.test(msg)) {
                this.qes_arr[5].ans = msg;
                FB.fbMessage(sender, this.qes_arr[6].qes);
                break;
            }
            else {
                FB.fbMessage(sender, 'Please Enter a Valid BirthDate \n' + this.qes_arr[5].qes);
                break;
            }
        }
        case 6 : {
            let validZip = /(^\d{5}$)|(^\d{5}-\d{4}$)/;
            if (validZip.test(msg)) {
                this.qes_arr[6].ans = msg;
                break;
            }
            else {
                FB.fbMessage(sender, 'Please Enter a Valid Zip Code \n' + this.qes_arr[6].qes);
                break;
            }
        }
        case 7 : {
            if (msg === 'yes' || msg === '1') {
                this.qes_arr[7].ans = 'Me';
                FB.fbMessage(sender, this.qes_arr[8].qes);
                break;
            }
            else if (msg === 'no' || msg === '0') {
                FB.fbMessage(sender, 'Your employer or health plan has provided you with a website link that ends in a special code. (Example: go.Lyfe-up.com/code or preventnow.com/code).\nPlease enter just the code.');
                break;
            }
            else {
                this.qes_arr[7].ans = msg;
                FB.fbMessage(sender, this.qes_arr[8].qes);
                break;
            }
        }
        case 8 : {
            let num = parseInt(msg);
            if (isNaN(num) && num > 3.0 && num < 8.0) {
                this.qes_arr[8].ans = num;
                FB.fbMessage(sender, this.qes_arr[9].qes);
                break;
            }
            else {
                FB.fbMessage(sender, 'Please Enter a Valid Height \n' + this.qes_arr[9].qes);
                break;
            }
        }
        case 9 : {
            let num = parseInt(msg);
            if (isNaN(num) && num > 6.0 && num < 440.0) {
                this.qes_arr[9].ans = num;
                FB.fbMessage(sender, this.qes_arr[10].qes);
                break;
            }
            else {
                FB.fbMessage(sender, 'Please Enter a Valid Weight \n' + this.qes_arr[10].qes);
                break;
            }
        }
        case 10 : {
            let num = parseInt(msg);
            if (isNaN(num) && num > 10.0 && num < 150.0) {
                this.qes_arr[10].ans = num;
                FB.fbMessage(sender, this.qes_arr[11].qes);
                break;
            }
            else {
                FB.fbMessage(sender, 'Please Enter a Valid Waist Circumference \n' + this.qes_arr[11].qes);
                break;
            }
        }
        case 11 : {
            let num = parseInt(msg);
            if (isNaN(num) && num > 10.0 && num < 150.0) {
                this.qes_arr[11].ans = num;
                FB.fbMessage(sender, this.qes_arr[12].qes);
                break;
            }
            else {
                FB.fbMessage(sender, 'Please Enter a Valid Hip Circumference \n' + this.qes_arr[12].qes);
                break;
            }
        }
        case 12 : {
            let num = parseInt(msg);
            if (isNaN(num) && num > 0 && num < 10) {
                this.qes_arr[12].ans = num;
                FB.fbMessage(sender, this.qes_arr[13].qes);
                break;
            }
            else {
                FB.fbMessage(sender, 'Please Enter a Valid Choice \n' + this.qes_arr[13].qes);
                break;
            }
        }
        case 13 : {
            let num = parseInt(msg);
            if (isNaN(num) && num > 0 && num < 4) {
                this.qes_arr[13].ans = num;
                if (num === 1)
                    FB.fbMessage(sender, this.qes_arr[14].qes);
                else
                    FB.fbMessage(sender, this.qes_arr[15].qes);
                break;
            }
            else {
                FB.fbMessage(sender, 'Please Enter a Valid Choice \n' + this.qes_arr[15].qes);
                break;
            }
        }
        case 15 : {
            let num = parseInt(msg);
            if (isNaN(num) && num > 0 && num < 3) {
                this.qes_arr[15].ans = num;
                FB.fbMessage(sender, this.qes_arr[16].qes);
                break;
            }
            else {
                FB.fbMessage(sender, 'Please Enter a Valid Choice \n' + this.qes_arr[16].qes);
                break;
            }
        }
        case 16: {
            if (msg === 'yes' || msg === '1') {
                this.qes_arr[16].ans = 1;
                FB.fbMessage(sender, this.qes_arr[17].qes);
                break;
            }
            else if (msg === 'no' || msg === '0') {
                this.qes_arr[16].ans = 0;
                FB.fbMessage(sender, this.qes_arr[17].qes);
                break;
            }
            else {
                FB.fbMessage(sender, 'Please Choose by Yes or No only \n' + this.qes_arr[16].qes);
                break;
            }
        }
        case 17: {
            if (msg === 'yes' || msg === '1') {
                this.qes_arr[17].ans = 1;
                FB.fbMessage(sender, "Your Registration has been completed Successfully");
                return true;
            }
            else if (msg === 'no' || msg === '0') {
                this.qes_arr[17].ans = 0;
                FB.fbMessage(sender, "Your Registration has been completed Successfully");
                return true;
            }
            else {
                FB.fbMessage(sender, 'Please Choose by Yes or No only \n' + this.qes_arr[17].qes);
                break;
            }
        }

    }

    return false;

};

var signQeue = [];

function qeueLook(sender) {
    for (let i = 0; i < signQeue.length; i++)
        if (signQeue[i].senderId === sender)
            return i;
}

function qeueAdd(sender) {
    let elem = new sign_obj();
    elem.setSender(sender);
    signQeue.push(elem);

}

function qeueDel(sender) {
    let elem = qeueLook(sender);
    if (elem > -1)
        signQeue.splice(elem, 1);
}

module.exports = {

    signQeue: signQeue,
    qeueLook: qeueLook,
    qeueAdd: qeueAdd,
    qeueDel: qeueDel,
    sign_obj: sign_obj

};